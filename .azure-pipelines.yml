trigger:
  branches:
    include:
      - main
      - develop

variables:
  # Имя Docker-образа (без тега)
  imageName: 'pricespy-fastapi'
  # Сервис-коннекшен в Azure DevOps для Docker Registry
  dockerRegistryServiceConnection: 'dockerhub-connection'

jobs:
  # 1) Сборка, линтинг и тесты
  - job: BuildAndTest
    displayName: 'Build, Lint & Test'
    pool:
      name: 'Default'   # или vmImage: 'ubuntu-latest' для Hosted
    steps:
      - checkout: self

      # 1.1 Установка Python и зависимостей
      - script: |
          echo "=== Using system Python ==="
          python --version
          pip install --upgrade pip
          pip install -r requirements.txt
        displayName: 'Install Dependencies'

      # 1.2 Линтинг (если нужно)
      - script: |
          pip install black flake8
          black --check src/PriceSpy
          flake8 src/PriceSpy
        displayName: 'Lint with Black & Flake8'

      # 1.3 Запуск unit + integration тестов
      - script: |
          echo "=== Running Tests ==="
          export PYTHONPATH=src
          pytest tests/unit tests/integration \
            --junitxml=$(Build.ArtifactStagingDirectory)/test-results.xml
        displayName: 'Run Pytest'

      - task: PublishTestResults@2
        displayName: 'Publish Test Results'
        inputs:
          testResultsFormat: 'JUnit'
          testResultsFiles: '**/test-results.xml'
          failTaskOnFailedTests: true

  # 2) Сборка и пуш Docker-образа
  - job: BuildAndPushDockerImage
    displayName: 'Build & Push Docker Image'
    dependsOn: BuildAndTest
    pool:
      name: 'Default'
    steps:
      - checkout: self

      - task: Docker@2
        displayName: 'Build and Push Image'
        inputs:
          command: buildAndPush
          containerRegistry: $(dockerRegistryServiceConnection)
          repository: $(imageName)
          dockerfile: Dockerfile
          buildContext: .
          tags: |
            $(Build.BuildId)
            latest
