import pandas as pd
import numpy as np
import joblib
from sklearn.metrics import mean_absolute_error, mean_squared_error

# –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö
df = pd.read_csv("data/final_test_price_data.csv", parse_dates=['date'])

# –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ø—Ä–∏–∑–Ω–∞–∫–æ–≤ (—Ç–æ—á–Ω–æ –∫–∞–∫ –≤ day4)
df['dayofweek'] = df['date'].dt.dayofweek
df['month'] = df['date'].dt.month
df['rolling_mean_7'] = df['price'].rolling(window=7).mean()
df['price_shift_1'] = df['price'].shift(1)
df['price_shift_2'] = df['price'].shift(2)

# –£–¥–∞–ª—è–µ–º –ø—Ä–æ–ø—É—â–µ–Ω–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ—Å–ª–µ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ø—Ä–∏–∑–Ω–∞–∫–æ–≤
df = df.dropna()

# –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø—Ä–∏–∑–Ω–∞–∫–∏ –∏ —Ü–µ–ª–µ–≤—É—é –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é
features = ['dayofweek', 'month', 'rolling_mean_7', 'price_shift_1', 'price_shift_2']
X = df[features]
y = df['price']

# –î–µ–ª–∏–º –Ω–∞ train/test (–Ω–∞–ø—Ä–∏–º–µ—Ä, 80/20)
split_idx = int(len(df) * 0.8)
X_test = X.iloc[split_idx:]
y_test = y.iloc[split_idx:]

# –ó–∞–≥—Ä—É–∑–∫–∞ –º–æ–¥–µ–ª–∏
model = joblib.load("models/linear_regression_model_2.joblib")  # –ø—Ä–æ–≤–µ—Ä—å –ø—É—Ç—å –∏ –∏–º—è!

# –ü—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏—è
y_pred = model.predict(X_test)

# –ú–µ—Ç—Ä–∏–∫–∏
mae = mean_absolute_error(y_test, y_pred)
rmse = np.sqrt(mean_squared_error(y_test, y_pred))

print("‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ.")
print(f"üìä MAE: {mae:.2f}")
print(f"üìâ RMSE: {rmse:.2f}")

# –ü—Ä–æ—Å—Ç–µ–π—à–∏–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–∞—á–µ—Å—Ç–≤–∞
assert mae < 100, "‚ö†Ô∏è MAE —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–µ, –≤–æ–∑–º–æ–∂–Ω–æ –æ—à–∏–±–∫–∞ –≤ –ø—Ä–∏–∑–Ω–∞–∫–∞—Ö –∏–ª–∏ –¥–∞–Ω–Ω—ã—Ö!"
assert rmse < 150, "‚ö†Ô∏è RMSE —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–µ!"
